#!/usr/bin/env node

'use strict';

global.isCommandline = true;

var util = require('util'),
	commander = require('commander'),
	db = require('../server/lib/db'),
	moduleLoader = require('../server/lib/moduleLoader'),
	modules = moduleLoader.loadModules(),
	commands = moduleLoader.getCommands();


commander
	.version(require('../package.json').version);

commands.forEach(function(command) {
	if (!util.isFunction(command.callback)) {
		command.callback = modules[command.moduleName][command.callback];
	}

	var currentCommand = commander
		.command(command.name)
		.description('(' + command.moduleName + ') ' + command.description)
		.arguments((command.arguments || []).join(' '))
		.action(command.callback);

	(command.options || []).forEach(function(option) {
		if (!util.isArray(option)) {
			option = [option, ''];
		}

		currentCommand.option(option[0], option[1]);
	});
});

process.stdout.write('\n' +
	'  ╔═╗╔╗╔╦╔╦╗╔═╗╦    ┌┐ ┌─┐┌┬┐\n' +
	'  ╠═╣║║║║║║║╠═╣║    ├┴┐│ │ │ \n' +
	'  ╩ ╩╝╚╝╩╩ ╩╩ ╩╩═╝  └─┘└─┘ ┴ \n')

db.connect({
	'dialect': 'sqlite',
	'storage': 'server/data/animalbot.db'
}).then(function() {
	for (var moduleName in modules) {
		db.loadModels('modules/' + moduleName + '/models');
	}

	db.createRelations();
	db.syncDatabase();

	commander
		.parse(process.argv);

	if (!process.argv.slice(2).length) {
		commander.help();
	}
});